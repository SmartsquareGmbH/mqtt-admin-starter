name: CD

on:
  release:
    types: [ created ]
  push:

jobs:
  publish-maven-artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Setup JDK 14
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 14
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Setup Gradle cache
        uses: actions/cache@v2.1.0
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Export GPG secring
        run: echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --no-tty --keyring secring.gpg --export-secret-keys > ~/.gnupg/secring.gpg
#
#      - name: Create gradle.properties
#        run: |
#          cat <<EOT >> ~/.gradle/gradle.properties
#          signing.keyId=88B72FCF
#          signing.password=${{ secrets.GPG_PASSPHRASE }}
#          signing.secretKeyRingFile=/home/runner/.gnupg/secring.gpg
#          EOT

      - name: Check
        run: ./gradlew check

      - name: Publish
        run: ./gradlew publishMavenJavaPublicationToMavenLocal -Psigning.keyId=${{secrets.GPG_KEY_ID}} -Psigning.password=${{secrets.GPG_PASSPHRASE}} -Psigning.secretKeyRingFile=$(echo ~/.gnupg/secring.gpg)
        env:
          OSSRHUSER: ${{ secrets.OSSRHUSER }}
          OSSRHPASSWORD: ${{ secrets.OSSRHPASSWORD }}
          GITHUB_VERSION: ${{ github.event.release.tag_name }}

      - name: Upload Gradle reports
        uses: actions/upload-artifact@v2.1.3
        if: failure()
        with:
          name: Gradle Reports
          path: "**/build/reports"

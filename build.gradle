buildscript {
    ext {
        javaVersion = JavaVersion.VERSION_11

        junitVersion = "5.7.1"
        kotlinVersion = "1.4.30"
        jacksonVersion = "2.12.1"
        springBootVersion = "2.4.2"
        kluentVersion = "1.65"
    }

    repositories {
        gradlePluginPortal()
    }

    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    id 'maven'
    id 'signing'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = javaVersion.toString()
    }
}

signing {
    sign configurations.archives
}

dependencies {
    implementation "org.springframework.boot:spring-boot:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-autoconfigure:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

    testImplementation "org.amshove.kluent:kluent:$kluentVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.testcontainers:testcontainers:1.15.2"
    testImplementation "org.testcontainers:junit-jupiter:1.15.2"
}

group = "de.smartsquare"
archivesBaseName = "mqtt-admin-starter"
version = "0.9.1"
description = "Spring Boot Starter providing admin functionality for brokers."

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/SmartsquareGmbH/mqtt-admin-starter")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            version = System.getenv("GITHUB_VERSION") ?: project.version

            from(components.java)
        }
    }
}

// TODO have a look here: https://itnext.io/publishing-artifact-to-maven-central-b160634e5268

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.findProperty("gpr.ossrhUser") ?: System.getenv("OSSRHUSER"), password: project.findProperty("gpr.ossrhPassword") ?: System.getenv("OSSRHPASSWORD"))
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.findProperty("gpr.ossrhUser") ?: System.getenv("OSSRHUSER"), password: project.findProperty("gpr.ossrhPassword") ?: System.getenv("OSSRHPASSWORD"))
            }

            pom.project {
                name 'Mqtt-Admin-Starter'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Spring Boot Starter providing admin functionality for brokers.'
                url 'https://github.com/SmartsquareGmbH/mqtt-admin-starter'

                scm {
                    connection 'scm:git:https://github.com/SmartsquareGmbH/mqtt-admin-starter.git'
                    developerConnection 'scm:git:ssh://github.com/SmartsquareGmbH/mqtt-admin-starter.git'
                    url 'https://github.com/SmartsquareGmbH/mqtt-admin-starter'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT' // TODO or https://github.com/SmartsquareGmbH/mqtt-admin-starter/blob/main/LICENSE.md ?
                    }
                }

                developers {
                    developer {
                        id 'lschuer'
                        name 'Leonie Sch√ºrstedt'
                        email 'schuerstedt@smartsquare.de'
                    }
                }
            }
        }
    }
}

test {
    useJUnitPlatform {
        excludeEngines "junit-vintage"
    }
}
